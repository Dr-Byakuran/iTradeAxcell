@using iTrade.CustomHtmlHelper;
@model iTrade.Models.CompanyBranch
@using iTrade.Models;

@*@model IEnumerable<iTrade.Models.Staff>*@

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}

<!-- ================== BEGIN PAGE LEVEL STYLE ================== -->
<link href="@Url.Content("~/assets/plugins/DataTables/css/data-table.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/gritter/css/jquery.gritter.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/bootstrap-datepicker/css/datepicker.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/bootstrap-combobox/css/bootstrap-combobox.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/bootstrap-select/bootstrap-select.min.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/select2/dist/css/select2.min.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/bootstrap-tagsinput/bootstrap-tagsinput.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/jquery-tag-it/css/jquery.tagit.css")" rel="stylesheet" type="text/css" />

@Styles.Render("~/bootstrap-fileinput-master/filecss")
<!-- ================== END PAGE LEVEL STYLE ================== -->
@using (Html.BeginForm("OutletEdit", "CustomSettings", FormMethod.Post, new { id = "editCompanyForm" }))
{
    <!-- begin page-header -->
    <div class="page-header lead">
        Outlet / @Model.BranchName
        <span class="email-btn-row pull-right">
            @Html.ActionLink("Cancel", "Outlets", null, new { @class = "btn btn-primary" })
            <button type="button" id="btnSaveChanges" class="btn btn-primary">Save Changes</button>
        </span>
    </div>
    <!-- end page-header -->

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.BranchID)
    @Html.HiddenFor(model => model.CompID)
    @Html.HiddenFor(model => model.IsDefault)
    @Html.HiddenFor(model => model.ImageUrl)
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.CreatedOn)

    <input type="hidden" id="selectedTab" name="selectedTab" value="@ViewBag.Status" />

    <div class="">
        <ul class="nav nav-tabs">
            <li class="active"><a href="#default-tab-1" data-toggle="tab">Outlet Info </a></li>

        </ul>

    </div>
    <div class="tab-content">
        <div class="tab-pane fade active in" id="default-tab-1">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(model => model.BranchName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control", placeholder = "Outlet name" } })
                        @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label(" ", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.BranchName2, new { htmlAttributes = new { @class = "form-control", placeholder = "Additional name if any" } })
                        @Html.ValidationMessageFor(model => model.BranchName2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BranchCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.BranchCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Branch code" } })
                        @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BranchType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.BranchType, new { htmlAttributes = new { @class = "form-control", placeholder = "Branch type, i.e. Sales outlet or Warehouse.." } })
                        @Html.ValidationMessageFor(model => model.BranchType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Addr1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Addr1, new { htmlAttributes = new { @class = "form-control", placeholder = "Address line 1" } })
                        @Html.ValidationMessageFor(model => model.Addr1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Addr2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Addr2, new { htmlAttributes = new { @class = "form-control", placeholder = "Address line 2" } })
                        @Html.ValidationMessageFor(model => model.Addr2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Addr3, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Addr3, new { htmlAttributes = new { @class = "form-control", placeholder = "Address line 3" } })
                        @Html.ValidationMessageFor(model => model.Addr3, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Addr4, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Addr4, new { htmlAttributes = new { @class = "form-control", placeholder = "Address line 4" } })
                        @Html.ValidationMessageFor(model => model.Addr4, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group hidden">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control", placeholder = "Country" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Postal Code" } })
                        @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control", placeholder = "Contact person" } })
                        @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Main phone number" } })
                        @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.FaxNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.FaxNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Fax number" } })
                        @Html.ValidationMessageFor(model => model.FaxNo, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNo2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.PhoneNo2, new { htmlAttributes = new { @class = "form-control", placeholder = "Other phone number" } })
                        @Html.ValidationMessageFor(model => model.PhoneNo2, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Mobile number" } })
                        @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PrimaryEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.PrimaryEmail, new { htmlAttributes = new { @class = "form-control", placeholder = "Email address" } })
                        @Html.ValidationMessageFor(model => model.PrimaryEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group hidden">
                    @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control", placeholder = "Company website" } })
                        @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group hidden">
                    @Html.LabelFor(model => model.Group, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Group, new { htmlAttributes = new { @class = "form-control", placeholder = "Customer group" } })
                        @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.DropDownListFor(model => model.IsActive, Html.OptionsForBoolean(model => model.IsActive), htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control", placeholder = "Remarks" } })
                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />
            </div>

            <br />

        </div>


    </div>


}

@section Scripts{
    <script src="@Url.Content("~/assets/plugins/DataTables/js/jquery.dataTables.js")"></script>
    <script src="@Url.Content("~/assets/js/table-manage-default.demo.min.js")"></script>
    <script src="@Url.Content("~/assets/plugins/gritter/js/jquery.gritter.js")"></script>
    <script src="@Url.Content("~/assets/js/ui-modal-notification.demo.min.js")"></script>

    <script src="@Url.Content("~/assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js")"></script>
    <script src="@Url.Content("~/assets/plugins/bootstrap-combobox/js/bootstrap-combobox.js")"></script>
    <script src="@Url.Content("~/assets/plugins/bootstrap-select/bootstrap-select.min.js")"></script>
    <script src="@Url.Content("~/assets/plugins/select2/dist/js/select2.min.js")"></script>
    <script src="@Url.Content("~/assets/plugins/bootstrap-tagsinput/bootstrap-tagsinput.min.js")"></script>
    <script src="@Url.Content("~/assets/plugins/bootstrap-tagsinput/bootstrap-tagsinput-typeahead.js")"></script>
    <script src="@Url.Content("~/assets/plugins/jquery-tag-it/js/tag-it.min.js")"></script>


    <script src="@Url.Content("~/assets/js/form-plugins.star.js")"></script>

    <script src="@Url.Content("~/assets/js/apps.min.js")"></script>

    <script src="@Url.Content("~/Scripts/modal-open.js")"></script>
    @Scripts.Render("~/bundles/filejs")


}


<script>
    $(document).ready(function () {
        // App.init();
        TableManageDefault.init();
        // Notification.init();
        FormPlugins.init();

    });
</script>



<script type="text/javascript">
    $(document).ready(function () {
        $("select.staffpicker").change(function () {
            var staffid = $(".staffpicker option:selected").val();
            var staffname = $(".staffpicker option:selected").text().trim();

            $('#personID').val(staffid);
            $('#personName').val(staffname);

            //   alert($('#personID').val() + "-" + $('#personName').val());

        });
    });

</script>



<script type="text/javascript">

    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        var target = $(e.target).attr("href") // activated tab
    //    alert(target);

        if (target == "#default-tab-1") {
            $('#selectedTab').val("GeneralInfo");
        };
        if (target == "#default-tab-2") {
            $('#selectedTab').val("FinancialInfo");
        };
        if (target == "#default-tab-3") {
            $('#selectedTab').val("");
        };
    });

    $("#btnSaveChanges").click(function () {


        $("#editCompanyForm").submit();

    });

</script>


<script type="text/javascript">
    function removeNestedForm(element, container, deleteElement) {
        $container = $(element).parents(container);
        $container.find(deleteElement).val('True');
        $container.hide();
    }

    function addNestedForm(container, counter, ticks, content) {
        var nextIndex = $(counter).length;
        var pattern = new RegExp(ticks, "gi");
        content = content.replace(pattern, nextIndex);
        $(container).append(content);

    }

</script>


