
@model List<iTrade.Models.ReceivedItemDetail>


@using (@Html.BeginForm())
{
    var modelcount = Model.Count;
    for (int i = 0; i < Model.Count; i++)
    {
        <tr>
            <td style="width:80px;">
                @Html.HiddenFor(model => model[i].ReceivedItemDetailID)
                @Html.HiddenFor(model => model[i].ReceivedItemID, new { id = "InvID" })
                @Html.HiddenFor(model => model[i].Unit)
                @Html.HiddenFor(model => model[i].IsControlItem, new { id = "isControlItem" })

                @if (@ViewBag.ReturnedItemStatus != "Confirmed")
                {
                    if (Model[i].IsBundle == true)
                    {
                        if (Model[i].RefItemID == 0)
                        {
                        <a data-modal="" href="/ReceivedItems/_DelDet/@Model[i].ReceivedItemDetailID" id="btnDelDetBundle"><i class="fa fa-remove m-r-10"></i></a>
                        <a data-modal="" href="/ReceivedItems/_EditDetBundle/@Model[i].ReceivedItemDetailID" id="btnEditDetBundle" data-para1="@Model[i].ReceivedItemDetailID"><i class="fa fa-edit m-r-10"></i></a>


                    }
                    else
                    {


                    };
                }
                else
                {
                    <a data-modal="" href="/ReceivedItems/_DelDet/@Model[i].ReceivedItemDetailID" id="btnDel"><i class="fa fa-remove m-r-5"></i></a>
                    <a data-modal="" href="/ReceivedItems/_EditDet/@Model[i].ReceivedItemDetailID" id="btnEdit"><i class="fa fa-edit m-r-5"></i></a>
                }
                }
            </td>

            <td style="width:20px;">
                @(i + 1)
            </td>

            <td class="col-md-4">
                @Html.DisplayFor(model => model[i].ItemName, new { htmlAttributes = new { id = "itemName2", @class = "form-control col-md-6", @readonly = true } })  &nbsp;&nbsp;
                @if (Model[i].IsBundle == true)
                {
                    if (Model[i].RefItemID == 0)
                    {
                        <span class="label label-info">Package</span>
                    }
                    if (Model[i].SalesType == "FOCItem")
                    {
                        <span class="label label-warning">FOC</span>
                    }
                }

            </td>

            <td>
                @Html.DisplayFor(model => model[i].Qty, new { htmlAttributes = new { id = "itemQty2", @class = "form-control Qty", @readonly = true } })
            </td>
            <td>
                @Html.DisplayFor(model => model[i].UnitPrice, new { htmlAttributes = new { id = "itemUnitPrice2", @class = "form-control Unitprice", @readonly = true } })

                @*&nbsp;&nbsp; @Model[i].Remark*@

            </td>
            <td>
                @Html.DisplayFor(model => model[i].DiscountedPrice, new { htmlAttributes = new { id = "itemDiscountedPrice2", @class = "form-control Discountedprice", @readonly = true } })

                @*&nbsp;&nbsp; @Model[i].Remark*@

            </td>
            <td>
                @Html.DisplayFor(model => model[i].Amount, new { htmlAttributes = new { id = "itemAmount2", @class = "form-control text-right Amount", @readonly = true } })

            </td>


        </tr>


    }

}



<!-- modal placeholder-->
<div id="myModal" class="modal" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

<script>
        $(function () {
            $("#item-session .form-control .Qty").on("focusout", function () {
                var qty = $("#item-session .form-control .Qty").val();
                var unitprice = $("#item-session .form-control .Unitprice").val();
                var amount = $("#item-session .form-control .Amount").val();

                var totalamount = qty * unitprice;

                alert(unitprice);

                $('#item-session .form-control.Amount').val(totalamount);

                RecalculateItems();
            });
            $("#item-session .form-control .Unitprice").on("focusout", function () {
                RecalculateItems();
            });
            $("#item-session .form-control .Amount").on("focusout", function () {
                RecalculateItems();
            });


        })
</script>

<script>
        function RecalculateItems() {
            var totalAmount = 0;
            $("#item-session .form-control .Amount").each(function () {
                //same as above, except with items with Amount class
                totalAmount += parseInt($(this).val());
            });
            //set inner html of each span identified above with the correct values
            $("#TotalAmount").html(totalAmount);
        }
</script>

<script type="text/javascript">

    $("#btnAddDet").click(function () {
        var pid = $('#itemID').val().trim();
        var qty = $('#itemQty').val().trim();
        var SorID = $('#itemSorID').val().trim();
        $('#txtTitleQty').text(qty);

        var flag = $('#itemIsBundle').val().trim();
        if (flag == "true") {
            var url = '@Url.Action("_AddDetBundle", "ReceivedItems")';
            url += '/?id=' + pid + '&qty=' + qty + '&SorID=' + SorID;
            $("#bundleOrderModalContent").load(url);
            $('#bundleOrderModal').modal({
                keyboard: true
            }, 'show');

        } else {
            $("#addDetForm").submit();
        }

    });

</script>

