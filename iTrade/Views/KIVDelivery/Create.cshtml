@model iTrade.Models.KIVDeliveryCreateViewModel
@*@model IEnumerable<iTrade.Models.Client>*@
@*@model IEnumerable<iTrade.Models.Staff>*@
@*@model IEnumerable<iTrade.Models.Warehouse>*@

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
    string strYear = Model.Invoice.CreatedOn.Year.ToString();
    string strInvoice = string.Format("INV-{0}{1:000000}", strYear, Model.Invoice.InvID);
    int i = 0;
}

<!-- ================== BEGIN PAGE LEVEL STYLE ================== -->
<link href="@Url.Content("~/assets/plugins/DataTables/css/data-table.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/gritter/css/jquery.gritter.css")" rel="stylesheet" type="text/css" />

<link href="@Url.Content("~/assets/plugins/bootstrap-datepicker/css/datepicker.css")" rel="stylesheet" type="text/css" />

<link href="@Url.Content("~/assets/plugins/bootstrap-combobox/css/bootstrap-combobox.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/bootstrap-select/bootstrap-select.min.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/select2/dist/css/select2.min.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/bootstrap-tagsinput/bootstrap-tagsinput.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/jquery-tag-it/css/jquery.tagit.css")" rel="stylesheet" type="text/css" />


<!-- ================== END PAGE LEVEL STYLE ================== -->
<!-- begin page-header -->
<h1 class="page-header lead">CREATE KIV DELIVERY</h1>
<!-- end page-header -->
<div class="email-btn-row hidden-xs">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })

</div>

<!-- begin panel -->
<div class="panel panel-inverse">
    <div class="panel-heading">
        <label id="lblHeader" style="color:white"></label>
    </div>

    <div class="panel-body">

        <form id="frmCreateKIVDelivery" action="@Url.Action("Create", "KIVDelivery")" method="post">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.Hidden("tags", new { htmlAttributes = new { id = "tags", @class = "form-control", placeholder = "Please enter customer name to view available list" } })
            <div class="row">
                <div class="col-md-7">
                    <div class="form-horizontal">
                        @*<div class="form-group">
                            @Html.Label("Invoice NO", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                <input type="text" value="@strInvoice" readonly class="form-control"/>
                            </div>
                        </div>*@
                        <div class="form-group">
                            @Html.LabelFor(model => model.Invoice.CustName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                <select class="form-control selectpicker" data-size="10" data-live-search="true" data-style="btn-white" id="strCustNo" name="strCustNo">
                                    <option value="" selected>Select company</option>
                                    @foreach (var item in ViewData["ClientsAll"] as IEnumerable<iTrade.Models.Client>)
                                    {
                                        <option value="@item.CustNo">@item.CustName</option>
                                        //@item.FileName  // instead .FileName use property which u used in ur model class
                                    }
                                </select>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Invoice.Addr1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Invoice.Addr1, new { htmlAttributes = new { id = "addr1", @class = "form-control", @readonly = true } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Invoice.Addr2, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Invoice.Addr2, new { htmlAttributes = new { id = "addr2", @class = "form-control", @readonly = true } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Invoice.Addr3, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Invoice.Addr3, new { htmlAttributes = new { id = "addr3", @class = "form-control", @readonly = true } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.KIVDelivery.DeliveryAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.KIVDelivery.DeliveryAddress, new { htmlAttributes = new { @class = "form-control", placeholder = "Delivery address if different from the above" } })
                                @Html.ValidationMessageFor(model => model.KIVDelivery.DeliveryAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>


                </div>
                <div class="col-md-5">
                    <div class="form-horizontal">

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Invoice.InvDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Invoice.InvDate, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Invoice.PoNo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Invoice.PoNo, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Invoice.PersonName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Invoice.PersonName, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Invoice.PaymentTerms, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Invoice.PaymentTerms, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                            </div>
                        </div>*@

                        <div class="form-group">
                            @Html.LabelFor(model => model.KIVDelivery.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.KIVDelivery.DeliveryDate, new { htmlAttributes = new { id = "deliveryDate", @class = "form-control", @Value = @DateTime.Now } })
                                @Html.ValidationMessageFor(model => model.KIVDelivery.DeliveryDate, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.KIVDelivery.DeliveryTime, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.KIVDelivery.DeliveryTime, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.KIVDelivery.DeliveryTime, "", new { @class = "text-danger" })
                            </div>

                        </div>


                        @*<div class="form-group">
                            @Html.Label("Stock From", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                <select class="form-control warehousepicker" id="strLocation" name="strLocation">

                                    @foreach (var item in ViewData["WarehouseAll"] as IEnumerable<iTrade.Models.Warehouse>)
                                    {
                                        <option value="@item.LocationID">@item.LocationName</option>
                                        //@item.FileName  // instead .FileName use property which u used in ur model class
                                    }
                                </select>

                            </div>
                        </div>*@

                        <div class="form-group">
                            <div class="col-md-offset-6 col-md-4 pull-left">
                                <input type="submit" value=" Create " class="btn btn-primary col-md-12" />
                            </div>
                        </div>
                    </div>


                </div>
            </div>

            <div id="divKIVDETs">
            </div>
        </form>
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>



</div>
</div>
<!-- end panel -->
@section Scripts{
    <script src="@Url.Content("~/assets/plugins/DataTables/js/jquery.dataTables.js")"></script>
    <script src="@Url.Content("~/assets/js/table-manage-default.demo.min.js")"></script>
    <script src="@Url.Content("~/assets/plugins/gritter/js/jquery.gritter.js")"></script>
    <script src="@Url.Content("~/assets/js/ui-modal-notification.demo.min.js")"></script>

    <script src="@Url.Content("~/assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js")"></script>
    <script src="@Url.Content("~/assets/plugins/bootstrap-combobox/js/bootstrap-combobox.js")"></script>
    <script src="@Url.Content("~/assets/plugins/bootstrap-select/bootstrap-select.min.js")"></script>
    <script src="@Url.Content("~/assets/plugins/select2/dist/js/select2.min.js")"></script>
    <script src="@Url.Content("~/assets/plugins/bootstrap-tagsinput/bootstrap-tagsinput.min.js")"></script>
    <script src="@Url.Content("~/assets/plugins/bootstrap-tagsinput/bootstrap-tagsinput-typeahead.js")"></script>
    <script src="@Url.Content("~/assets/plugins/jquery-tag-it/js/tag-it.min.js")"></script>

    <script src="@Url.Content("~/assets/js/form-plugins.star.js")"></script>

    <script src="@Url.Content("~/assets/js/apps.min.js")"></script>

    <script src="@Url.Content("~/Scripts/modal-open.js")"></script>


}


<script>
    $(document).ready(function () {
        // App.init();
        TableManageDefault.init();
        // Notification.init();
        FormPlugins.init();

    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("select.selectpicker").change(function () {
            var val = $(".selectpicker option:selected").val();
            //   alert("You have selected the country - " + val);

            if (val > 0) {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("AutoCompleteSelected")',
                    dataType: "json",
                    contentType: 'application/json, charset=utf-8',
                    data: {
                        search: val
                    },
                    success: function (data) {
                        $('#item1').val(data.result.CustNo);
                        $('#item2').val(data.result.CustName);
                        $('#custNo').val(data.result.CustNo);
                        $('#custName').val(data.result.CustName);
                        $('#addr1').val(data.result.Addr1);
                        $('#addr2').val(data.result.Addr2);
                        $('#addr3').val(data.result.Addr3);
                        $('#postalCode').val(data.result.PostalCode)

                        var custName = data.result.CustName;
                        var custNo = data.result.CustNo;
                        var AccNo = data.result.AccNo;

                        $.getJSON(
                               '/Orders/GetCreditSettings?custNo=' + custNo + ' #data',
                               function (data) {

                                   var CreditLimit = '$' + data.CreditLimit.toLocaleString("en-US", { style: "decimal", minimumFractionDigits: 2 });
                                   var OverDueLimit = '$' + data.OverdueLimit.toLocaleString("en-US", { style: "decimal", minimumFractionDigits: 2 });
                                   var AccountBalance = '$' + data.AccountBalance.toLocaleString("en-US", { style: "decimal", minimumFractionDigits: 2 });
                                   $('#lblHeader').text(custName + "\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0Acc No: " + AccNo + "\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0Credit Limit: " + CreditLimit + "\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0OverDue Limit : " + OverDueLimit + "\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0Account Balance : " + AccountBalance);
                               }
                            );

                        $.ajax({
                            url: "/KIVDelivery/_KIVDETs",
                            contentType: "application/html; charset=utf-8",
                            type: "GET",
                            dataType: "html",
                            data: { 'custNo': custNo, 'kivDelID': 0 },
                            success: function (data) {
                                $('#divKIVDETs').html('');
                                $('#divKIVDETs').html(data);
                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                alert(thrownError);
                            }
                        });
                        //$('.divKIVDETs2').load('/KIVDelivery/_KIVDETs?custNo' + custNo + ' #data');

                        //$.post("/KIVDelivery/_KIVDETs", { "custNo": custNo }, function (result) {

                        //    $("#tblData tbody").html($(result));

                        //});
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }

                });

            }
        });


        $("select.staffpicker").change(function () {
            var staffid = $(".staffpicker option:selected").val();
            var staffname = $(".staffpicker option:selected").text();

            $('#personID').val(staffid);
            $('#personName').val(staffname);

        });
    });
</script>



<script>
    $(document).ready(function () {
        $('#tags').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '@Url.Action("AutoComplete")',
                    dataType: "json",
                    contentType: 'application/json, charset=utf-8',
                    data: {
                        search: $("#tags").val()
                    },
                    success: function (data) {

                        response($.map(data, function (item) {
                            return {
                                label: item.CustNo + " | " + item.CustName,

                            };
                        }));
                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }

                });
            },
            selectFirst: true,
            delay: 0,
            autoFocus: true,
            minLength: 1
        });

        $("#tags").on("autocompleteselect", function (event, ui) {
            var str1 = ui.item.value;
            var str2 = str1.split("|");
            var val = str2[0].trim();

            //  alert(val);

            $.ajax({
                type: 'GET',
                url: '@Url.Action("AutoCompleteSelected")',
                dataType: "json",
                contentType: 'application/json, charset=utf-8',
                data: {
                    search: val
                },
                success: function (data) {

                    $('#custNo').val(data.result.CustNo);
                    $('#custName').val(data.result.CustName);
                    $('#addr1').val(data.result.Addr1);
                    $('#addr2').val(data.result.Addr2);
                    $('#addr3').val(data.result.Addr3);
                    $('#postalCode').val(data.result.PostalCode)

                    var custName = data.result.CustName;
                    var custNo = data.result.CustNo;
                    var AccNo = data.result.AccNo;

                    $.getJSON(
                           '/Orders/GetCreditSettings?custNo=' + custNo + ' #data',
                           function (data) {

                               var CreditLimit = '$' + data.CreditLimit.toLocaleString("en-US", { style: "decimal", minimumFractionDigits: 2 });
                               var OverDueLimit = '$' + data.OverdueLimit.toLocaleString("en-US", { style: "decimal", minimumFractionDigits: 2 });
                               var AccountBalance = '$' + data.AccountBalance.toLocaleString("en-US", { style: "decimal", minimumFractionDigits: 2 });
                               $('#lblHeader').text(custName + "\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0Acc No: " + AccNo + "\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0Credit Limit: " + CreditLimit + "\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0OverDue Limit : " + OverDueLimit + "\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0Account Balance : " + AccountBalance);
                           }
                        );
                },
                error: function (xhr, status, error) {
                    alert(error);
                }

            });

        });



    });

</script>


<script>
    $(document).ready(function () {
        $('#deliveryDate').datepicker({
            format: 'dd/mm/yyyy',
            setDate: new Date(),
            todayHighlight: true,
            autoclose: true
        });
        $('#deliveryDate').datepicker('setDate', new Date());
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("select.warehousepicker").change(function () {
            var warehouseid = $(".warehousepicker option:selected").val();
            var warehousename = $(".warehousepicker option:selected").text().trim();

            $('#warehouseID').val(warehouseid);
            $('#warehouseName').val(warehousename);

            //   alert(warehouseid +  " " + warehousename);

        });

    });
</script>

