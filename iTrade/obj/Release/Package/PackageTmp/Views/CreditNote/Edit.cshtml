@model iTrade.Models.CreditNote
@*@model IEnumerable<iTrade.Models.Client>*@
@*@model IEnumerable<iTrade.Models.Staff>*@

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}

<!-- ================== BEGIN PAGE LEVEL STYLE ================== -->
<link href="@Url.Content("~/assets/plugins/DataTables/css/data-table.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/gritter/css/jquery.gritter.css")" rel="stylesheet" type="text/css" />

<link href="@Url.Content("~/assets/plugins/bootstrap-datepicker/css/datepicker.css")" rel="stylesheet" type="text/css" />

<link href="@Url.Content("~/assets/plugins/bootstrap-combobox/css/bootstrap-combobox.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/bootstrap-select/bootstrap-select.min.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/select2/dist/css/select2.min.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/parsley/src/parsley.css")" rel="stylesheet" type="text/css" />

<!-- ================== END PAGE LEVEL STYLE ================== -->
<!-- begin page-header -->
<div class="page-header lead">
    Credit Notes / @Model.CnNo  &nbsp;&nbsp; (@Model.Status)

    <span class="email-btn-row pull-right">
       <a href="@Url.Action("Index")"><span class="btn btn-default">Cancel </span></a>
        <a href="@Url.Action("PrintCreditNote", "Invoice", new { Id = Model.CnID })" id="btnPrint35" target="_blank" class="btn btn-primary"><i class="fa fa-print m-r-5"></i> Preview</a>
        @if (Model.Status != "Confirmed")
        {
            <a href="#MultiPrintModal" data-toggle="modal" class="btn btn-default"><i class="fa fa-check-square-o m-r-5"></i> Submit Order</a>
            //<button type="button" id="btnConvert" class="btn btn-default"><i class="fa fa-check-square-o m-r-5"></i> Generate Invoice</button>
            <button type="button" id="btnSaveAndAdd" class="btn btn-default">Save & Add Another</button>
            <button type="button" id="btnSaveChanges" class="btn btn-primary">Save Changes</button>
        }


    </span>

</div>
<!-- end page-header -->
<!-- begin panel -->
<div class="panel panel-inverse">
    <div class="panel-heading">
        <div class="row">
            <div class="col-md-6">
                @Model.CustName &nbsp;&nbsp;&nbsp;&nbsp;  @if (Model.InvType == "CS")
                {
                    <span> (Cash Sales) </span>
                }
                else
                {
                    <span> (Credit Customer) </span>
                }
            </div>
            <div class="col-md-6">
                @foreach (var item in ViewData["ClientsAll"] as IEnumerable<iTrade.Models.Client>)
                {
                    if (item.CustNo == Model.CustNo)
                    {
                        if (item.AccType == "CR")
                        {
                            if (item.ClientCreditSettings.FirstOrDefault() != null && item.ClientCreditSettings.FirstOrDefault().IsCreditAllowed)
                            {
                                <input type="hidden" id="valIsCreditControl" value="@item.ClientCreditSettings.FirstOrDefault().IsCreditAllowed" />
                                <input type="hidden" id="valCreditLimit" value="@item.ClientCreditSettings.FirstOrDefault().CreditLimit" />
                                <input type="hidden" id="valOverdueLimit" value="@item.ClientCreditSettings.FirstOrDefault().OverdueLimit" />
                                <input type="hidden" id="valOutstanding" value="@item.ClientCreditSettings.FirstOrDefault().AccountBalance" />

                                <span>Credit Limit: $ &nbsp; @item.ClientCreditSettings.FirstOrDefault().CreditLimit &nbsp;&nbsp;&nbsp;&nbsp; Overdue Limit: $ &nbsp; @item.ClientCreditSettings.FirstOrDefault().OverdueLimit &nbsp;&nbsp;&nbsp;&nbsp; Outstanding Amount: $ &nbsp; @item.ClientCreditSettings.FirstOrDefault().AccountBalance</span>
                            }
                            else
                            {
                                <span>No Credit Control</span>
                            }

                        }
                    }
                }
            </div>
        </div>

    </div>
    <div class="panel-body">

        @using (Html.BeginForm("Edit", "CreditNote", FormMethod.Post, new { id = "orderForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CnID)
            @Html.HiddenFor(model => model.CnNo)
            @Html.HiddenFor(model => model.InvID)
            @Html.HiddenFor(model => model.InvNo)
            @Html.HiddenFor(model => model.InvType, new { id = "invType"  })

            @Html.HiddenFor(model => model.PersonID, new { id = "personID" })
            @Html.HiddenFor(model => model.PersonName, new { id = "personName" })
            @Html.HiddenFor(model => model.CustNo, new { id = "custNo" })
            @Html.HiddenFor(model => model.CustName, new { id = "custName" })

            @Html.HiddenFor(model => model.Addr4, new { id = "addr4" })
            @Html.HiddenFor(model => model.PhoneNo, new { id = "phoneNo" })
            @Html.HiddenFor(model => model.FaxNo, new { id = "faxNo" })

            @Html.HiddenFor(model => model.PreDiscAmount, new { id = "crPreDiscAmount" })
            @Html.HiddenFor(model => model.Discount, new { id = "crDiscount" })
            @Html.HiddenFor(model => model.Amount, new { id = "crAmount" })
            @Html.HiddenFor(model => model.Gst, new { id = "crGst" })
            @Html.HiddenFor(model => model.Nett, new { id = "crNett" })
            @Html.HiddenFor(model => model.NettInWords)

            @Html.HiddenFor(model => model.Status)
            @Html.HiddenFor(model => model.Remark, new { id = "invRemark" })
            @Html.HiddenFor(model => model.CreatedBy)
            @Html.HiddenFor(model => model.CreatedOn)
            @Html.HiddenFor(model => model.ModifiedBy)
            @Html.HiddenFor(model => model.ModifiedOn)

            <input type="hidden" id="custGroup" value="" />
            <input type="hidden" id="actionType" name="actionType" value="0" />

            <div class="row">
                <div class="col-md-7">
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CustName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                <select class="form-control selectpicker" data-size="10" data-live-search="true" data-style="btn-white">
                                    <option value="" selected>Select company</option>
                                    @foreach (var item in ViewData["ClientsAll"] as IEnumerable<iTrade.Models.Client>)
                                    {
                                        <option value="@item.CustNo"
                                                @if (item.CustNo == Model.CustNo) { <text> selected="selected" </text>        }>
                                            @item.CustName
                                        </option>
                                        //@item.FileName  // instead .FileName use property which u used in ur model class
                                    }
                                </select>
                            </div>
                            <div class="col-md-1">
                                <span id="accType">@Model.InvType</span>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label(" ", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.CustName2, new { htmlAttributes = new { id = "custName2", @class = "form-control", placeholder = "Additional name info if provided" } })
                                @Html.ValidationMessageFor(model => model.CustName2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Addr1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Addr1, new { htmlAttributes = new { id = "addr1", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Addr1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Addr2, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Addr2, new { htmlAttributes = new { id = "addr2", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Addr2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Addr3, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Addr3, new { htmlAttributes = new { id = "addr3", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Addr3, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3">
                                @Html.EditorFor(model => model.Attn, new { htmlAttributes = new { id = "attn", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Attn, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>


                </div>
                <div class="col-md-5">
                    <div class="form-horizontal">

                        <div class="form-group">
                            @Html.LabelFor(model => model.InvDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.InvDate, new { htmlAttributes = new { id = "invDate", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InvDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.InvRef, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.InvRef, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InvRef, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PersonName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                <select class="form-control staffpicker">
                                    <option value="0" selected>Select sales person</option>
                                    @foreach (var item in ViewData["StaffsAll"] as IEnumerable<iTrade.Models.Staff>)
                                    {
                                        <option value="@item.StaffID"
                                                @if (item.StaffID == Model.PersonID) { <text> selected="selected" </text>         }>
                                            @item.FirstName @item.LastName
                                        </option>
                                        //@item.FileName  // instead .FileName use property which u used in ur model class
                                    }
                                </select>
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.PaymentTerms, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.PaymentTerms, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PaymentTerms, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DocType, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.DocType, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                @Html.ValidationMessageFor(model => model.DocType, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-3">
                                <a href="#additemModal" data-toggle="modal" class="btn btn-success"><i class="fa fa-plus m-r-5"></i> Add more items</a> 
                            </div>
                            <div class="col-md-3">
                                <a href="#kivListModal" data-toggle="modal" class="btn btn-info"><i class="fa fa-plus m-r-5"></i> Knock-off docs</a>
                            </div>
                        </div>


                    </div>


                </div>
            </div>

        }


        <div id="divOrderDetail">

        </div>






        <!-- modal placeholder-->
        <div id="additemModal" class="modal" data-keyboard="false" data-backdrop="static">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div id='additemModalContent'>
                        <div class="modal-header">

                            <button type="button" class="close" id="btnAddItemClose2002" aria-hidden="true" data-dismiss="modal">X</button>
                            <h3 class="modal-title lead">@Model.CustName &nbsp;&nbsp; CN#@Model.CnNo &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Total Amount $:  <span id="txtTotalAmount" class="lead"> </span></h3>
                        </div>
                        <div class="modal-body">

                            @{Html.RenderAction("_AddItem", "CreditNote", new { id = Model.CnID });}


                            <br />

                        </div>

                        <div class="modal-footer">
                            <span id="txtLastItem" class="pull-left lead semi-bold"></span>

                            <span id="progress" class="text-center" style="display: none;">
                                <img src="~/assets/img/Wait.gif" alt="wait" />
                                Wait..
                            </span>
                            <input type="hidden" id="txtUrl1" value="" />
                            <input type="hidden" id="txtUrl2" value="" />
                            <input type="button" class="btn btn-primary" id="btnAddItem" value=" Save & Next " />
                            <button id="btnAddItemClose001" class="btn btn-white" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- modal placeholder-->
        <div id="kivListModal" class="modal fade in" data-keyboard="false" data-backdrop="static">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div id='kivListModalContent'>
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                            <h3 class="modal-title"><span class="lead">Knock-Off Documents</span></h3>
                        </div>
                        <div class="modal-body">

                            @{Html.RenderAction("_CreditNoteInvList", "CreditNote", new { id = Model.CustNo, act = 0 });}

                            <input type="hidden" id="txtUrl3" value="" />

                            <br />

                        </div>

                        <div class="modal-footer">
                            <span id="progress" class="text-center" style="display: none;">
                                <img src="~/assets/img/Wait.gif" alt="wait" />
                                Wait..
                            </span>

                            <input type="button" class="btn btn-primary" id="btnCreditKnockOff" value=" Save " />
                            <button class="btn btn-white" data-dismiss="modal">Close</button>
                        </div>



                    </div>

                </div>
            </div>
        </div>



 


        <!-- modal placeholder-->
        <div id="bundleOrderModal" class="modal fade in" data-keyboard="false" data-backdrop="static">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                        <h3 class="modal-title lead"><span id="txtTitle"> </span> &nbsp;&nbsp; &nbsp; Qty: <span id="txtTitleQty"> </span></h3>
                    </div>
                    <div id='bundleOrderModalContent'></div>

                </div>
            </div>
        </div>


        <!-- modal placeholder-->
        <div id="kivPartialModal" class="modal" data-keyboard="false" data-backdrop="static">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div id='kivPartialModalContent'>
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                            <h3 class="modal-title"><span class="lead">Partial Delivery</span></h3>
                        </div>
                        <div class="modal-body">

                            <div class="row">
                                <div class="col-md-12">

                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <br />

                                    <table class="table table-striped" style="width:100%;">
                                        <thead>
                                            <tr>
                                                <th class="col-md-6">Description</th>
                                                <th>Order <br />Qty</th>
                                                <th>Balance <br />Qty</th>
                                                <th>Deliver <br />Qty</th>

                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td> Item 1</td>
                                                <td> 3 </td>
                                                <td> 3 </td>
                                                <td> <input type="text" value="0" class="form-control col-md-1" /> </td>

                                            </tr>


                                        </tbody>
                                    </table>


                                    <div class="form-horizontal">
                                        <div class="form-group">



                                        </div>
                                    </div>

                                </div>


                            </div>


                            <br />

                        </div>

                        <div class="modal-footer">
                            <span id="progress" class="text-center" style="display: none;">
                                <img src="~/assets/img/Wait.gif" alt="wait" />
                                Wait..
                            </span>

                            <input type="button" class="btn btn-primary" id="btnPartialDelivery" value=" Save " />
                            <button class="btn btn-white" data-dismiss="modal">Close</button>
                        </div>



                    </div>

                </div>
            </div>
        </div>


        <!-- modal placeholder MultiPagesPrint Modal-->
        <div id="MultiPrintModal" class="modal fade in" data-keyboard="false" data-backdrop="static">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div id='MultiPrintModalContent'>
                        <div class="modal-header">
                            <button type="button" class="close" id="btnCloseAndReload" aria-hidden="true">X</button>
                            <span class="modal-title lead">Credit Note Submit  </span>

                        </div>
                        <div class="modal-body">

                            <div id="paymentMessage" class="hide">
                                <h3 class="lead text-center"> Your credit note has been proceed sucessfully. </h3>
                                <h3 class="lead text-center">
                                    <a href="@Url.Action("PrintCreditNote", "Invoice", new { Id = Model.CnID })" id="btnPrint333" target="_blank" class="btn btn-primary"><i class="fa fa-print m-r-5"></i> Print Invoice</a>  &nbsp;&nbsp; or &nbsp;&nbsp;  <a href="/CreditNote/Create" id="btnCreate2" class="btn btn-primary"><i class="fa fa-plus m-r-5"></i> New Credit Note</a>
                                </h3>

                            </div>

                            <div id="paymentBox">
                                <div class="row">
                                    <div class="col-md-4 semi-bold">
 
                                        <p class="lead">Credit Note</p>
     
                                        <h2> $  <span id="invAmountText"></span>  </h2>

                                    </div>
                                    <div class="col-md-8"> <br /><br /><br />
                                        <div class="lead">Are you sure to proceed?</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="modal-footer">

                            <div id="headerBefore">
                                <span class="pull-right">
                                    <span id="progress3" class="text-center" style="display: none;">
                                        <img src="~/assets/img/Wait.gif" alt="wait" />
                                        Wait..
                                    </span>
                                    &nbsp; &nbsp;
                                    <input type="button" class="btn btn-primary" id="btnSubmitOrder" value=" Confirm " />   &nbsp;&nbsp;
                                    <button class="btn btn-white" data-dismiss="modal">Cancel</button>
                                </span>
                            </div>
                            <div id="headerAfter" class="hide">
                                <span class="pull-right">
                                    <span id="progress3" class="text-center" style="display: none;">
                                        <img src="~/assets/img/Wait.gif" alt="wait" />
                                        Wait..
                                    </span>

                                    <a href="/CreditNote/Index" id="btnClose3" class="btn btn-white"> Close</a>
                                </span>

                            </div>
                        </div>


                    </div>
                </div>
            </div>
        </div>



    </div>

</div>
<!-- end panel -->
@section Scripts{
    <script src="@Url.Content("~/assets/plugins/DataTables/js/jquery.dataTables.js")"></script>
    <script src="@Url.Content("~/assets/js/table-manage-default.demo.min.js")"></script>
    <script src="@Url.Content("~/assets/plugins/gritter/js/jquery.gritter.js")"></script>
    <script src="@Url.Content("~/assets/js/ui-modal-notification.demo.min.js")"></script>

    <script src="@Url.Content("~/assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js")"></script>
    <script src="@Url.Content("~/assets/plugins/bootstrap-combobox/js/bootstrap-combobox.js")"></script>
    <script src="@Url.Content("~/assets/plugins/bootstrap-select/bootstrap-select.min.js")"></script>
    <script src="@Url.Content("~/assets/plugins/select2/dist/js/select2.min.js")"></script>
    <script src="@Url.Content("~/assets/plugins/bootstrap-tagsinput/bootstrap-tagsinput.min.js")"></script>
    <script src="@Url.Content("~/assets/plugins/bootstrap-tagsinput/bootstrap-tagsinput-typeahead.js")"></script>
    <script src="@Url.Content("~/assets/plugins/jquery-tag-it/js/tag-it.min.js")"></script>

    <script src="@Url.Content("~/assets/js/form-plugins.star.js")"></script>

    <script src="@Url.Content("~/assets/js/apps.min.js")"></script>

    <script src="@Url.Content("~/Scripts/modal-order.js")"></script>


}


<script>
            $(document).ready(function () {
                // App.init();
                TableManageDefault.init();
                // Notification.init();
                FormPlugins.init();

                if (@ViewBag.PageFrom == "1") {
                    $("#additemModal").modal('show');
                    $('#txtSearch').focus();
                    $('#txtSearch').select();
                }

            });
</script>


@*<script type="text/javascript">
    $("#btnCreditKnockOff").click(function () {
        alert("hi..");
        $("#editCreditNoteForm").submit();
    });
</script>*@



<script type="text/javascript">
    $('#bundleOrderModal').on('hidden.bs.modal', function () {

        $('#additemModal').modal('show');

    });


</script>



<script>
            $(document).ready(function () {
                $('#invDate').datepicker({
                    format: 'dd/mm/yyyy',
                    setDate: new Date(),
                    todayHighlight: true,
                    autoclose: true
                });
                $('#deliveryDate').datepicker({
                    format: 'dd/mm/yyyy',
                    setDate: new Date(),
                    todayHighlight: true,
                    autoclose: true
                });

            });
</script>

<script>
    $(document).ready(function () {

        var url1 = '@Url.Action("_OrderDetail", "CreditNote", new { id = @Model.CnID })';
        $("#divOrderDetail").load(url1);
        $('#txtUrl1').val(url1);

        @*var url2 = '@Url.Action("_DisplayKivDets", "CreditNote", new { id = @Model.CnID })';
        $("#divKivDets").load(url2);
        $('#txtUrl2').val(url2);*@

        $("#btnSaveChanges").click(function()
        {
            var val1 = $('#divOrderDetail #invPreDiscAmount').val();
            var val2 = $('#divOrderDetail #invDiscount').val();
            var val3 = $('#divOrderDetail #invAmount').val();
            var val4 = $('#divOrderDetail #invGst').val();
            var val5 = $('#divOrderDetail #invNett').val();
            $('#crPreDiscAmount').val(val1);
            $('#crDiscount').val(val2);
            $('#crAmount').val(val3);
            $('#crGst').val(val4);
            $('#crNett').val(val5);

            var remark = document.getElementById('inputRemark').value;
            $('#invRemark').val(remark.trim());

            $("#actionType").val("SaveAndStay");
            $("#orderForm").submit();
            //$("#EditKivInfoForm").submit();

        });
        $("#btnSaveAndAdd").click(function()
        {
            var val1 = $('#divOrderDetail #invPreDiscAmount').val();
            var val2 = $('#divOrderDetail #invDiscount').val();
            var val3 = $('#divOrderDetail #invAmount').val();
            var val4 = $('#divOrderDetail #invGst').val();
            var val5 = $('#divOrderDetail #invNett').val();
            $('#crPreDiscAmount').val(val1);
            $('#crDiscount').val(val2);
            $('#crAmount').val(val3);
            $('#crGst').val(val4);
            $('#crNett').val(val5);

            var remark = document.getElementById('inputRemark').value;
            $('#invRemark').val(remark.trim());

            $("#actionType").val("SaveAndAdd");
            $("#orderForm").submit();
            //$("#EditKivInfoForm").submit();
        });

        $("#btnSubmitKivInfo").click(function()
        {
            $("#actionType").val("SaveAndStay");
            //$("#orderForm").submit();
            $("#EditKivInfoForm").submit();
        });

    });
</script>


<script type="text/javascript">
            $(document).ready(function () {
                $("select.selectpicker").change(function () {
                    var val = $(".selectpicker option:selected").val();
                    //   alert("You have selected the country - " + val);

                    if (val > 0) {
                        $.ajax({
                            type: 'GET',
                            url: '@Url.Action("AutoCompleteSelected")',
                            dataType: "json",
                            contentType: 'application/json, charset=utf-8',
                            data: {
                                search: val
                            },
                            success: function (data) {
                                $('#item1').val(data.result.CustNo);
                                $('#item2').val(data.result.CustName);
                                $('#custNo').val(data.result.CustNo);
                                $('#custName').val(data.result.CustName);
                                $('#addr1').val(data.result.Addr1);
                                $('#addr2').val(data.result.Addr2);
                                $('#addr3').val(data.result.Addr3);
                                $('#postalCode').val(data.result.PostalCode)
                                $('#invType').val(data.result.AccType);
                                $('#accType').text(data.result.AccType);

                               // var custName = data.result.CustName;
                               // var custNo = data.result.CustNo;
                               // var AccNo = data.result.AccNo;
                               // $.getJSON(
                               //   '/Orders/GetCreditSettings?custNo=' + custNo + ' #data',
                               //   function (data) {
                               //          var cre = data.CreditLimit;
                               //       //   alert(cre);
                               //          $('#lblHeader').text(custName + " Credit Limit: $ " + cre);
                               //    //  var CreditLimit = '$' + data.CreditLimit.toLocaleString("en-US", { style: "decimal", minimumFractionDigits: 2 });
                               //       var OverDueLimit = '$' + data.OverdueLimit.toLocaleString("en-US", { style: "decimal", minimumFractionDigits: 2 });
                               //       var AccountBalance = '$' + data.AccountBalance.toLocaleString("en-US", { style: "decimal", minimumFractionDigits: 2 });

                               //    //   $('#lblHeader').text(custName + "\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0Acc No: " + AccNo + "\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0Credit Limit: " + CreditLimit + "\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0OverDue Limit : " + OverDueLimit + "\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0Account Balance : " + AccountBalance);
                               //   }
                               //);


                            },
                            error: function (xhr, status, error) {
                                alert(error);
                            }

                        });

                    }
                });

                $("select.staffpicker").change(function () {
                    var staffid = $(".staffpicker option:selected").val();
                    var staffname = $(".staffpicker option:selected").text().trim();

                    $('#personID').val(staffid);
                    $('#personName').val(staffname);

                 //   alert($('#personID').val() + "-" + $('#personName').val());

                });

            });





</script>







<script type="text/javascript">
    $(document).ready(function () {

        //     $('#chkCashAmount').prop('readonly', true);
        $('#chkNETSAmount').prop('readonly', true);
        $('#chkCreditCardAmount').prop('readonly', true);
        $('#chkChequeAmount').prop('readonly', true);
        $('#chkChequeNumber').prop('readonly', true);

        $('#chkPaymentMode').change(function () {
            var isChecked = $(this).is(':checked');
            if (isChecked) {
                $("#otherPaymentMode").removeClass();
                $("#otherPaymentMode").addClass("show");
            }
            else {
                $("#otherPaymentMode").removeClass();
                $("#otherPaymentMode").addClass("hide");
            }
        });

        $('#chkWithoutPayment').change(function () {
            var isChecked = $(this).is(':checked');
            if (isChecked) {
                $('#chkCash').prop('checked', false); // Unchecks it
                $('#chkNETS').prop('checked', false); // Unchecks it
                $('#chkCreditCard').prop('checked', false); // Unchecks it
                $('#chkCheque').prop('checked', false); // Unchecks it
                $('#chkCash').prop('disabled', true); // Disable it
                $('#chkNETS').prop('disabled', true);
                $('#chkCreditCard').prop('disabled', true);
                $('#chkCheque').prop('disabled', true);
                $('#chkCashAmount').val(0);
                $('#chkNETSAmount').val(0);
                $('#chkCreditCardAmount').val(0);
                $('#chkChequeAmount').val(0);
                $('#chkChequeNumber').val("");
                $('#chkCashAmount').prop('readonly', true);
                $('#chkNETSAmount').prop('readonly', true);
                $('#chkCreditCardAmount').prop('readonly', true);
                $('#chkChequeAmount').prop('readonly', true);
                $('#chkChequeNumber').prop('readonly', true);
            }
            else {
                $('#chkCash').prop('disabled', false); // Enable it
                $('#chkNETS').prop('disabled', false);
                $('#chkCreditCard').prop('disabled', false);
                $('#chkCheque').prop('disabled', false);

            }
        });

        $('#chkCash').change(function () {
            var isChecked = $(this).is(':checked');
            if (isChecked) {
                $("#chkCashAmount").val("@Model.Nett");
                $('#chkCashAmount').prop('readonly', false);
            }
            else {
                $("#chkCashAmount").val("");
                $('#chkCashAmount').prop('readonly', true);
            }
        });

        $('#chkNETS').change(function () {
            var isChecked = $(this).is(':checked');
            if (isChecked)
                $('#chkNETSAmount').prop('readonly', false);
            else {
                $("#chkNETSAmount").val("");
                $('#chkNETSAmount').prop('readonly', true);
            }
        });

        $('#chkCreditCard').change(function () {
            var isChecked = $(this).is(':checked');
            if (isChecked)
                $('#chkCreditCardAmount').prop('readonly', false);
            else {
                $("#chkCreditCardAmount").val("");
                $('#chkCreditCardAmount').prop('readonly', true);
            }
        });

        $('#chkCheque').change(function () {
            var isChecked = $(this).is(':checked');
            if (isChecked) {
                $('#chkChequeAmount').prop('readonly', false);
                $('#chkChequeNumber').prop('readonly', false);
                //$("#chkChequeAmount").show();
                //$("#chkChequeNumber").show();
            }
            else {
                $("#chkChequeAmount").val("");
                $("#chkChequeNumber").val("");
                $('#chkChequeAmount').prop('readonly', true);
                $('#chkChequeNumber').prop('readonly', true);
                //$("#chkChequeAmount").hide();
                //$("#chkChequeNumber").hide();
            }
        });

        @*$("#btnSubmitPreview").click(function () {
            var l = new Array();
            var dTotal = 0;
            var bFullPayment = false;

            if ($("#chkCash option:selected").val() > 0)
            {
                dTotal += parseFloat($("#txtPaymentMethodCash").val());
                l.push(new Object({ PaymentMethod: "Cash", Amount: $("#txtPaymentMethodCash").val(), ChequeNumber: "" }));
            }

            if ($("#chkNETS option:selected").val() > 0)
            {
                dTotal += parseFloat($("#txtPaymentMethodNETS").val());
                l.push(new Object({ PaymentMethod: "NETS", Amount: $("#txtPaymentMethodNETS").val(), ChequeNumber: "" }));
            }

            if ($("#chkCreditCard option:selected").val() > 0)
            {
                dTotal += parseFloat($("#txtPaymentMethodCreditCard").val());
                l.push(new Object({ PaymentMethod: "Credit Card", Amount: $("#txtPaymentMethodCreditCard").val(), ChequeNumber: "" }));
            }

            if ($("#chkCheque option:selected").val() > 0)
            {
                dTotal += parseFloat($("#txtPaymentMethodCheque").val());
                l.push(new Object({ PaymentMethod: "Cheque", Amount: $("#txtPaymentMethodCheque").val(), ChequeNumber: $("#txtPaymentMethodChequeNumber").val() }));
            }

            if (parseFloat(@Model.Nett) == parseFloat(dTotal))
            {
                bFullPayment = true;
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Action("SubmitPaymentMethod")',
                dataType: "json",
                contentType: 'application/json, charset=utf-8',
                data: {
                    SorNo : @Model.SorNo,
                    PaymentMethodList : l,
                    FullPayment : bFullPayment
                },
                success: function (data) {
                },
                error: function (xhr, status, error) {
                    alert(error);
                }

            });
        });*@
        $('#btnSubmitOrder').click(function () {
            var bChecked = true;

            if (bChecked) {
                $.ajax({
                    type: 'GET',
                    url: '/CreditNote/_SubmitCreditNoteOrder',
                    dataType: "json",
                    contentType: 'application/json, charset=utf-8',
                    data: {
                        SorID: '@Model.CnID'
 
                    },
                    success: function (json) {
                        if (json.success != null && !json.success) {
                            alert(json.responseText);
                        }
                        if (json.isRedirect) {
                            $('#headerBefore').removeClass();
                            $('#headerBefore').addClass("hide");
                            $('#headerAfter').removeClass();
                            $('#headerAfter').addClass("show");
                            $('#paymentBox').removeClass();
                            $('#paymentBox').addClass("hide");
                            $('#paymentMessage').removeClass();
                            $('#paymentMessage').addClass("Show");
                            $("#btnPrint").attr("href", json.printUrl);
                            $("#btnPrint2").attr("href", json.printUrl);
                           $('#btnPrint').trigger('click');
                        //    $($get("btnPrint")).click();

                      //        window.location.href = json.redirectUrl;
                         //   window.location.href = "/Orders/Index";
                        }

                    },
                    error: function (xhr, status, error) {
                        alert(error);
                    }

                });

            }
            else {
                alert("Data invalid, not about to submit.");
            };
        });


    });




    $('#btnCreditKnockOff').click(function () {
        var url1 = '@Url.Action("_OrderDetail", "CreditNote", new { id = @Model.CnID })';
        var bChecked = true;

        var cid = @Model.CnID;
        var cntext = $('#invNettDet').val().trim();

        if (bChecked) {
            $.ajax({
                type: 'GET',
                url: '/CreditNote/_SaveKnockOff',
                dataType: "json",
                contentType: 'application/json, charset=utf-8',
                data: {
                    SorID: '@Model.CnID', 
                    PayFor: $('#invNettDet').val().trim()
                },
                success: function (result) {
                 //   $("#Div").html(result);
                    if (result.success) {
                        $('#kivListModal').modal('hide');
                        $("#divOrderDetail").load(url1);
                        //$("#divKivDets").load(newUrl2);
                    }

                },
                error: function (xhr, status, error) {
                    alert(error);
                }

            });

        }
        else {
            alert("Please input knock off amount.");
        };
    });




</script>




<script type="text/javascript">
    $("#btnAddItem").click(function () {
        //   $("#btnAddDet").prop('disabled', true);
        var pid = $('#itemID').val().trim();
        var qty = $('#itemQty').val().trim();
        var unitprice = $('#itemUnitPrice').val().trim();
        var discprice = $('#itemDiscountedPrice').val().trim();
        var SorNo = $('#itemSorID').val().trim();
        var selltype = $('.rSellType').filter(':checked').val().trim();
        var remark = $('#itemRemark').val().trim();

        $('#txtTitleQty').text(qty);

        var flag = $('#itemIsBundle').val().trim();
        if (flag == "true") {
            $('#additemModal').modal('hide');

            var url = '@Url.Action("_AddDetBundle", "Orders")';
            url += '/?id=' + pid + '&qty=' + qty + '&unitprice=' + unitprice + '&discprice=' + discprice + '&SorID=' + SorNo + '&selltype=' + selltype + '&remark=' + remark;

            $("#bundleOrderModalContent").load(url);
            $('#bundleOrderModal').modal({
                keyboard: true
            }, 'show');

        } else {
            $("#addItemForm").submit();
        }

    });



    $("#btnAddItemClose").click(function () {
        var url = '@Url.Action("Edit", "CreditNote", new { id = Model.CnID })';
        window.location = url;
    });

    $("#btnAddItemClose2").click(function () {
        var url = '@Url.Action("Edit", "CreditNote", new { id = Model.CnID })';
        window.location = url;
    });

    $("#btnCloseAndReload").click(function () {
        var url = '@Url.Action("Edit", "CreditNote", new { id = Model.CnID })';
        window.location = url;
    });


    $('#txtSearch').keypress(function (event) {
        var keycode = (event.keyCode ? event.keyCode : event.which);
        if (keycode == '13') {
            if ($('#txtSearch').val() != "" || $('#itemName').val() != "") {
                $('#itemQty').focus();
                $('#itemQty').select();
            } else {
                $('#txtSearch').focus();
                $('#txtSearch').select();
                alert("Please input product.");
            }


        }
        event.stopPropagation();
    });
    $('#itemQty').keypress(function (event) {
        var keycode = (event.keyCode ? event.keyCode : event.which);
        if (keycode == '13') {
            $('#itemDiscountedPrice').focus();
            $('#itemDiscountedPrice').select();
        }
        event.stopPropagation();
    });
    $('#itemDiscountedPrice').keypress(function (event) {
        var keycode = (event.keyCode ? event.keyCode : event.which);
        if (keycode == '13') {
            $('#itemRemark').focus();
            $('#itemRemark').select();
        }
        event.stopPropagation();
    });
    $('#itemRemark').keypress(function (event) {
        var keycode = (event.keyCode ? event.keyCode : event.which);
        if (keycode == '13') {
            $('#btnAddItem').focus();
            $('#btnAddItem').select();
        }
        event.stopPropagation();
    });


</script>

