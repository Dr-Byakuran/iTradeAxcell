@model List<iTrade.Models.INVDET>


@using (@Html.BeginForm())
{
    var modelcount = Model.Count;
    for (int i = 0; i < Model.Count; i++)
    {

        <tr>
            <td style="width:20px;">
                @Html.HiddenFor(model => model[i].DetID)
                @Html.HiddenFor(model => model[i].InvID, new { id = "InvID" })
                @Html.HiddenFor(model => model[i].Unit)
                @Html.HiddenFor(model => model[i].IsControlItem, new { id = "isControlItem" })

                <a data-modal="" href="/Sales/_DelDet/@Model[i].DetID" id="btnDel"><i class="fa fa-remove m-r-5"></i></a>

            </td>

            <td style="width:20px;">
                <table border="0" cellspacing="0" cellpadding="0">
                    <tr>
                        <td>
                            @if (i != 0 && Model[i].Position.ToString().IndexOf(".1") < 0)
                            {
                                <div style="cursor: pointer;" onclick="itemMoveUp(@Model[i].DetID)"><i class="fa fa-angle-up m-r-10"></i></div>
                            }
                        </td>
                        <td rowspan="2">
                            @Model[i].Position
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @if (i + 1 != modelcount)
                            {
                                <div style="cursor: pointer;" onclick="itemMoveDown(@Model[i].DetID)"><i class="fa fa-angle-down m-r-10"></i></div>
                            }
                        </td>
                    </tr>
                </table>

            </td>



            <td class="col-md-4">
                @Html.DisplayFor(model => model[i].ItemName, new { htmlAttributes = new { id = "itemName2", @class = "form-control col-md-6", @readonly = true } }) <br />
                @Html.DisplayFor(model => model[i].Remark, new { htmlAttributes = new { id = "itemRemark2", @class = "form-control col-md-3" } })
                
            </td>

            <td>
                @Html.DisplayFor(model => model[i].Qty, new { htmlAttributes = new { id = "itemQty2", @class = "form-control col-md-1 Qty" } })

            </td>
            <td>
                @Html.DisplayFor(model => model[i].Unit, new { htmlAttributes = new { id = "itemUnit2", @class = "form-control Unitprice", @readonly = true } })
            </td>
            <td>
                @Html.DisplayFor(model => model[i].UnitPrice, new { htmlAttributes = new { id = "itemUnitPrice2", @class = "form-control Unitprice", @readonly = true } })

            </td>
            <td>
                @Html.DisplayFor(model => model[i].Discount, new { htmlAttributes = new { id = "itemDiscount2", @class = "form-control Unitprice" } })

            </td>
            <td>
                @Html.DisplayFor(model => model[i].DiscountedPrice, new { htmlAttributes = new { id = "itemDiscountedPrice2", @class = "form-control Unitprice" } })

            </td>

            <td class="text-right"> 
                @Html.DisplayFor(model => model[i].Amount, new { htmlAttributes = new { id = "itemAmount2", @class = "form-control text-right Amount", @readonly = true } })
                
            </td>

 
        </tr>

    }



}



    <!-- modal placeholder-->

    <div id="myModal" class="modal" data-keyboard="false" data-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div id='myModalContent'></div>
            </div>
        </div>
    </div>

<script>
    function itemMoveUp(ID) {
        $.ajax({
            type: 'GET',
            url: '/Sales/_ItemMoveUp',
            dataType: "json",
            contentType: 'application/json, charset=utf-8',
            data: {
                id: ID
            },
            success: function (json) {
                if (json.success != null && !json.success) {
                    alert(json.responseText);
                    return false;
                }
                setTimeout(
                  function () {
                      location.reload();
                  }, 0001);

            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }

    function itemMoveDown(ID) {
        $.ajax({
            type: 'GET',
            url: '/Sales/_ItemMoveDown',
            dataType: "json",
            contentType: 'application/json, charset=utf-8',
            data: {
                id: ID
            },
            success: function (json) {
                if (json.success != null && !json.success) {
                    alert(json.responseText);
                    return false;
                }
                setTimeout(
                  function () {
                      location.reload();
                  }, 0001);

            },
            error: function (xhr, status, error) {
                alert(error);
            }

        });
    }
</script>





    <script>
        $(function () {
            $("#item-session .form-control .Qty").on("focusout", function () {
                var qty = $("#item-session .form-control .Qty").val();
                var unitprice = $("#item-session .form-control .Unitprice").val();
                var amount = $("#item-session .form-control .Amount").val();

                var totalamount = qty * unitprice;

                alert(unitprice);

                $('#item-session .form-control.Amount').val(totalamount);

                RecalculateItems();
            });
            $("#item-session .form-control .Unitprice").on("focusout", function () {
                RecalculateItems();
            });
            $("#item-session .form-control .Amount").on("focusout", function () {
                RecalculateItems();
            });


        })
    </script>

    <script>
        function RecalculateItems() {
            var totalAmount = 0;
            $("#item-session .form-control .Amount").each(function () {
                //same as above, except with items with Amount class
                totalAmount += parseInt($(this).val());
            });
            //set inner html of each span identified above with the correct values
            $("#TotalAmount").html(totalAmount);
        }
    </script>

