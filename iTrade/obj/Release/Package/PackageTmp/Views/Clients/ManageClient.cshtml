@using iTrade.CustomHtmlHelper;
@model iTrade.Models.Client

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
}

<!-- ================== BEGIN PAGE LEVEL STYLE ================== -->
<link href="@Url.Content("~/assets/plugins/DataTables/css/data-table.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/plugins/gritter/css/jquery.gritter.css")" rel="stylesheet" type="text/css" />
<!-- ================== END PAGE LEVEL STYLE ================== -->
<!-- begin page-header -->
<h1 class="page-header lead">Customers </h1>
<!-- end page-header -->
<div class="email-btn-row hidden-xs">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })

</div>

<!-- begin panel -->
<div class="panel panel-inverse">
    <div class="panel-heading">
        Manage customer
    </div>

    <div class="panel-body">

        <div>
            <ul class="nav nav-tabs">
                <li class="active"><a href="#default-tab-1" data-toggle="tab">General Info </a></li>
                <li class=""><a href="#default-tab-2" data-toggle="tab">Sales History</a></li>

            </ul>

        </div>

        <div class="tab-content">
            <div class="tab-pane fade active in" id="default-tab-1">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.CustNo)
                    @Html.HiddenFor(model => model.Country)
                    @Html.HiddenFor(model => model.SalesPersonID)
                    @Html.HiddenFor(model => model.SalesPersonName)
                    @Html.HiddenFor(model => model.CreatedBy)
                    @Html.HiddenFor(model => model.CreatedOn)


                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.AccNo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.AccNo, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                @Html.ValidationMessageFor(model => model.AccNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CustName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.CustName, new { htmlAttributes = new { @class = "form-control", placeholder = "Company name" } })
                                @Html.ValidationMessageFor(model => model.CustName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Addr1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Addr1, new { htmlAttributes = new { @class = "form-control", placeholder = "Address line 1" } })
                                @Html.ValidationMessageFor(model => model.Addr1, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Addr2, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Addr2, new { htmlAttributes = new { @class = "form-control", placeholder = "Address line 2" } })
                                @Html.ValidationMessageFor(model => model.Addr2, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Addr3, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Addr3, new { htmlAttributes = new { @class = "form-control", placeholder = "Address line 3" } })
                                @Html.ValidationMessageFor(model => model.Addr3, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", placeholder = "Postal Code" } })
                                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Phone number" } })
                                @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.FaxNo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.FaxNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Fax number" } })
                                @Html.ValidationMessageFor(model => model.FaxNo, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control", placeholder = "Contact person" } })
                                @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PrimaryEmail, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.PrimaryEmail, new { htmlAttributes = new { @class = "form-control", placeholder = "Email address" } })
                                @Html.ValidationMessageFor(model => model.PrimaryEmail, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control", placeholder = "Company website" } })
                                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Group, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.Group, new { htmlAttributes = new { @class = "form-control", placeholder = "Customer group" } })
                                @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
                            </div>
                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.DropDownListFor(model => model.IsActive, Html.OptionsForBoolean(model => model.IsActive), htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-6">
                                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control", placeholder = "Remarks" } })
                                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.AssignedTo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-2">
                                @Html.EditorFor(model => model.AssignedTo, new { htmlAttributes = new { @class = "form-control", placeholder = "Assign To" } })
                                @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-6 pull-right">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>

                }

            </div>

            <div class="tab-pane fade" id="default-tab-2">

                @{Html.RenderAction("_DisplayResults", "Sales", new { id = 0 });}



            </div>
        </div>


                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>



            </div>
        </div>
        <!-- end panel -->
        @section Scripts{
            <script src="@Url.Content("~/assets/plugins/DataTables/js/jquery.dataTables.js")"></script>
            <script src="@Url.Content("~/assets/js/table-manage-default.demo.min.js")"></script>
            <script src="@Url.Content("~/assets/plugins/gritter/js/jquery.gritter.js")"></script>
            <script src="@Url.Content("~/assets/js/ui-modal-notification.demo.min.js")"></script>
            <script src="@Url.Content("~/assets/js/apps.min.js")"></script>

            <script src="@Url.Content("~/Scripts/modal-client.js")"></script>


        }


        <script>
            $(document).ready(function () {
                // App.init();
                TableManageDefault.init();
                // Notification.init();
            });
        </script>


<script>
    $(document).ready(function () {
        $('#data-table0').DataTable({
            "order": [[0, "desc"]],
            "dom": '<"pull-left"f><"pull-right"l>tip'
        });
        $('#data-table1').DataTable({
            "order": [[0, "desc"]],
            "dom": '<"pull-left"f><"pull-right"l>tip'
        });
        $('#data-table2').DataTable({
            "order": [[0, "desc"]],
            "dom": '<"pull-left"f><"pull-right"l>tip'
        });
        $('#data-table3').DataTable({
            "order": [[0, "desc"]],
            "dom": '<"pull-left"f><"pull-right"l>tip'
        });
        $('#data-table4').DataTable({
            "order": [[0, "desc"]],
            "dom": '<"pull-left"f><"pull-right"l>tip'
        });
        $('#data-table5').DataTable({
            "order": [[0, "desc"]],
            "dom": '<"pull-left"f><"pull-right"l>tip'
        });
        $('#data-table6').DataTable({
            "order": [[0, "desc"]],
            "dom": '<"pull-left"f><"pull-right"l>tip'
        });



    });
</script>